"""rename abundance table and columns

Revision ID: 208b98134ddd
Revises: 14dc4c67ea56
Create Date: 2021-09-27 17:27:21.463837

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '208b98134ddd'
down_revision = '14dc4c67ea56'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'abundance_measurement',
        sa.Column(
            'date_created',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=True,
        ),
        sa.Column('uniprot_id', sa.String(), nullable=False),
        sa.Column('measured_transcript_expression', sa.Float(), nullable=True),
        sa.Column('measured_protein_concentration', sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ['uniprot_id'],
            ['uniprot_metadata.uniprot_id'],
            name=op.f('fk_abundance_measurement_uniprot_id_uniprot_metadata'),
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('uniprot_id', name=op.f('pk_abundance_measurement')),
    )
    op.drop_table('protein_abundance')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'protein_abundance',
        sa.Column(
            'date_created',
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column('uniprot_id', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            'measured_rna_abundance',
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            'measured_protein_abundance',
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ['uniprot_id'],
            ['uniprot_metadata.uniprot_id'],
            name='fk_protein_abundance_uniprot_id_uniprot_metadata',
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('uniprot_id', name='pk_protein_abundance'),
    )
    op.drop_table('abundance_measurement')
    # ### end Alembic commands ###
